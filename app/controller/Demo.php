<?php


namespace app\controller;


use app\BaseController;
use tauthz\facade\Enforcer;
use tauthz\middleware\Basic;

/**
 * Class Demo
 *
 * https://github.com/php-casbin/think-casbin
 * https://github.com/php-casbin/think-authz
 *
 * @package app\controller
 */
class Demo extends BaseController
{
    // 使用中间件
    /*protected $middleware = [
        [Basic::class, ['Demo', 'read]]
    ];*/

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $g = 'member';
        $c = request()->controller();
        $a = request()->action();

        // 校验权限
        if (!Enforcer::enforce($g, $c, $a)) {
            $resp = response()->data('Unauthorized.')->code(403);
            dd($resp->getData());
        }
    }

    public function read()
    {
        dd('读权限');
    }

    public function write()
    {
        dd('写权限');
    }

    public function edit()
    {
        dd('编辑权限');
    }

    public function addRule()
    {
        // 给用户赋予某个角色
        Enforcer::addRoleForUser('admin', 'administrator');
        Enforcer::addRoleForUser('tom', 'member');

        // 给admin添加访问Demo/read的权限
        Enforcer::addPermissionForUser('admin', 'Demo', 'read');
        Enforcer::addPermissionForUser('admin', 'Demo', 'write');
        Enforcer::addPermissionForUser('admin', 'Demo', 'edit');

        // 给某个规则，添加权限
        Enforcer::addPolicy('member', 'Demo', 'read');
        Enforcer::addPolicy('member', 'Demo', 'write');

        dd(123);
    }

    public function checkPermission()
    {
        if (Enforcer::enforce('tom', 'Demo', 'read')) {
            echo '允许访问';
        } else {
            echo '无权限访问';
        }
    }

    public function useApi()
    {
        // 获取所有角色
        $ret = Enforcer::getAllRoles();
        echo '获取所有角色：' . json_encode($ret) . '<br/>';

        // 获取所有角色的授权规则
        $ret = Enforcer::getPolicy();
        echo '获取所有角色的授权规则：' . json_encode($ret) . '<br/>';

        // 获取某个用户的所有角色
        $ret = Enforcer::getRolesForUser('tom');
        echo '获取某个用户的所有角色：' . json_encode($ret) . '<br/>';

        // 获取某个角色的所有用户
        $ret = Enforcer::getUsersForRole('member');
        echo '获取某个角色的所有用户：' . json_encode($ret) . '<br/>';

        // 用户是否拥有某个角色
        $ret = Enforcer::hasRoleForUser('admin', 'administrator');
        var_dump($ret);

        // 给用户添加角色
        Enforcer::addRoleForUser('admin', 'administrator');

        // 赋予权限给某个用户或角色
        /*// 根据用户
        Enforcer::addPermissionForUser('admin', 'Demo', 'read');
        // 根据角色
        Enforcer::addPermissionForUser('member', 'Demo','read');*/

        // 删除用户的角色
        Enforcer::deleteRoleForUser('tom', 'member');

        // 删除某个用户的所有角色
        Enforcer::deleteRolesForUser('tom');

        // 删除单个角色
        Enforcer::deleteRole('member');

        // 删除某个权限
        Enforcer::deletePermission('Demo', 'read');

        // 删除某个用户或角色的权限
        Enforcer::deletePermissionForUser('tom', 'Demo', 'read');

        // 删除某个用户或角色的所有权限
        // 根据用户
        Enforcer::deletePermissionsForUser('tom');
        // 根据角色
        Enforcer::deletePermissionsForUser('member');

        // 获取用户或角色的所有权限
        $ret = Enforcer::getPermissionsForUser('tom');
        echo '获取用户或角色的所有权限：' . json_encode($ret) . '<br/>';

        // 某个用户是否拥有某个权限
        Enforcer::hasPermissionForUser('tom', 'Demo', 'read');

        dd(456);
    }

}